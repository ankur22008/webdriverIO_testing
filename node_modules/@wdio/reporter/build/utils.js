"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sanitizeString = sanitizeString;
exports.sanitizeCaps = sanitizeCaps;

require("source-map-support/register");

/**
 * replaces whitespaces with underscore and removes dots
 * @param  {String} str  variable to sanitize
 * @return {String}      sanitized variable
 */
function sanitizeString(str) {
  if (!str) {
    return '';
  }

  return String(str).replace(/^.*\/([^/]+)\/?$/, '$1').replace(/\./g, '_').replace(/\s/g, '').toLowerCase();
}
/**
 * formats capability object into sanitized string for e.g.filenames
 * @param {Object} caps  Selenium capabilities
 */


function sanitizeCaps(caps) {
  if (!caps) {
    return '';
  }

  let result;
  /**
   * mobile caps
   */

  if (caps.deviceName) {
    result = [sanitizeString(caps.deviceName), sanitizeString(caps.platformName), sanitizeString(caps.platformVersion), sanitizeString(caps.app)];
  } else {
    result = [sanitizeString(caps.browserName), sanitizeString(caps.version || caps.browserVersion), sanitizeString(caps.platform || caps.platformName), sanitizeString(caps.app)];
  }

  result = result.filter(n => n !== undefined && n !== '');
  return result.join('.');
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy91dGlscy5qcyJdLCJuYW1lcyI6WyJzYW5pdGl6ZVN0cmluZyIsInN0ciIsIlN0cmluZyIsInJlcGxhY2UiLCJ0b0xvd2VyQ2FzZSIsInNhbml0aXplQ2FwcyIsImNhcHMiLCJyZXN1bHQiLCJkZXZpY2VOYW1lIiwicGxhdGZvcm1OYW1lIiwicGxhdGZvcm1WZXJzaW9uIiwiYXBwIiwiYnJvd3Nlck5hbWUiLCJ2ZXJzaW9uIiwiYnJvd3NlclZlcnNpb24iLCJwbGF0Zm9ybSIsImZpbHRlciIsIm4iLCJ1bmRlZmluZWQiLCJqb2luIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7O0FBS08sU0FBU0EsY0FBVCxDQUF5QkMsR0FBekIsRUFBOEI7QUFDakMsTUFBSSxDQUFDQSxHQUFMLEVBQVU7QUFDTixXQUFPLEVBQVA7QUFDSDs7QUFFRCxTQUFPQyxNQUFNLENBQUNELEdBQUQsQ0FBTixDQUNGRSxPQURFLENBQ00sa0JBRE4sRUFDMEIsSUFEMUIsRUFFRkEsT0FGRSxDQUVNLEtBRk4sRUFFYSxHQUZiLEVBR0ZBLE9BSEUsQ0FHTSxLQUhOLEVBR2EsRUFIYixFQUlGQyxXQUpFLEVBQVA7QUFLSDtBQUVEOzs7Ozs7QUFJTyxTQUFTQyxZQUFULENBQXVCQyxJQUF2QixFQUE2QjtBQUNoQyxNQUFJLENBQUNBLElBQUwsRUFBVztBQUNQLFdBQU8sRUFBUDtBQUNIOztBQUVELE1BQUlDLE1BQUo7QUFFQTs7OztBQUdBLE1BQUlELElBQUksQ0FBQ0UsVUFBVCxFQUFxQjtBQUNqQkQsSUFBQUEsTUFBTSxHQUFHLENBQ0xQLGNBQWMsQ0FBQ00sSUFBSSxDQUFDRSxVQUFOLENBRFQsRUFFTFIsY0FBYyxDQUFDTSxJQUFJLENBQUNHLFlBQU4sQ0FGVCxFQUdMVCxjQUFjLENBQUNNLElBQUksQ0FBQ0ksZUFBTixDQUhULEVBSUxWLGNBQWMsQ0FBQ00sSUFBSSxDQUFDSyxHQUFOLENBSlQsQ0FBVDtBQU1ILEdBUEQsTUFPTztBQUNISixJQUFBQSxNQUFNLEdBQUcsQ0FDTFAsY0FBYyxDQUFDTSxJQUFJLENBQUNNLFdBQU4sQ0FEVCxFQUVMWixjQUFjLENBQUNNLElBQUksQ0FBQ08sT0FBTCxJQUFnQlAsSUFBSSxDQUFDUSxjQUF0QixDQUZULEVBR0xkLGNBQWMsQ0FBQ00sSUFBSSxDQUFDUyxRQUFMLElBQWlCVCxJQUFJLENBQUNHLFlBQXZCLENBSFQsRUFJTFQsY0FBYyxDQUFDTSxJQUFJLENBQUNLLEdBQU4sQ0FKVCxDQUFUO0FBTUg7O0FBRURKLEVBQUFBLE1BQU0sR0FBR0EsTUFBTSxDQUFDUyxNQUFQLENBQWNDLENBQUMsSUFBSUEsQ0FBQyxLQUFLQyxTQUFOLElBQW1CRCxDQUFDLEtBQUssRUFBNUMsQ0FBVDtBQUNBLFNBQU9WLE1BQU0sQ0FBQ1ksSUFBUCxDQUFZLEdBQVosQ0FBUDtBQUNIIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiByZXBsYWNlcyB3aGl0ZXNwYWNlcyB3aXRoIHVuZGVyc2NvcmUgYW5kIHJlbW92ZXMgZG90c1xuICogQHBhcmFtICB7U3RyaW5nfSBzdHIgIHZhcmlhYmxlIHRvIHNhbml0aXplXG4gKiBAcmV0dXJuIHtTdHJpbmd9ICAgICAgc2FuaXRpemVkIHZhcmlhYmxlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzYW5pdGl6ZVN0cmluZyAoc3RyKSB7XG4gICAgaWYgKCFzdHIpIHtcbiAgICAgICAgcmV0dXJuICcnXG4gICAgfVxuXG4gICAgcmV0dXJuIFN0cmluZyhzdHIpXG4gICAgICAgIC5yZXBsYWNlKC9eLipcXC8oW14vXSspXFwvPyQvLCAnJDEnKVxuICAgICAgICAucmVwbGFjZSgvXFwuL2csICdfJylcbiAgICAgICAgLnJlcGxhY2UoL1xccy9nLCAnJylcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuLyoqXG4gKiBmb3JtYXRzIGNhcGFiaWxpdHkgb2JqZWN0IGludG8gc2FuaXRpemVkIHN0cmluZyBmb3IgZS5nLmZpbGVuYW1lc1xuICogQHBhcmFtIHtPYmplY3R9IGNhcHMgIFNlbGVuaXVtIGNhcGFiaWxpdGllc1xuICovXG5leHBvcnQgZnVuY3Rpb24gc2FuaXRpemVDYXBzIChjYXBzKSB7XG4gICAgaWYgKCFjYXBzKSB7XG4gICAgICAgIHJldHVybiAnJ1xuICAgIH1cblxuICAgIGxldCByZXN1bHRcblxuICAgIC8qKlxuICAgICAqIG1vYmlsZSBjYXBzXG4gICAgICovXG4gICAgaWYgKGNhcHMuZGV2aWNlTmFtZSkge1xuICAgICAgICByZXN1bHQgPSBbXG4gICAgICAgICAgICBzYW5pdGl6ZVN0cmluZyhjYXBzLmRldmljZU5hbWUpLFxuICAgICAgICAgICAgc2FuaXRpemVTdHJpbmcoY2Fwcy5wbGF0Zm9ybU5hbWUpLFxuICAgICAgICAgICAgc2FuaXRpemVTdHJpbmcoY2Fwcy5wbGF0Zm9ybVZlcnNpb24pLFxuICAgICAgICAgICAgc2FuaXRpemVTdHJpbmcoY2Fwcy5hcHApXG4gICAgICAgIF1cbiAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgPSBbXG4gICAgICAgICAgICBzYW5pdGl6ZVN0cmluZyhjYXBzLmJyb3dzZXJOYW1lKSxcbiAgICAgICAgICAgIHNhbml0aXplU3RyaW5nKGNhcHMudmVyc2lvbiB8fCBjYXBzLmJyb3dzZXJWZXJzaW9uKSxcbiAgICAgICAgICAgIHNhbml0aXplU3RyaW5nKGNhcHMucGxhdGZvcm0gfHwgY2Fwcy5wbGF0Zm9ybU5hbWUpLFxuICAgICAgICAgICAgc2FuaXRpemVTdHJpbmcoY2Fwcy5hcHApXG4gICAgICAgIF1cbiAgICB9XG5cbiAgICByZXN1bHQgPSByZXN1bHQuZmlsdGVyKG4gPT4gbiAhPT0gdW5kZWZpbmVkICYmIG4gIT09ICcnKVxuICAgIHJldHVybiByZXN1bHQuam9pbignLicpXG59XG4iXX0=